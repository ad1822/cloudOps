apiVersion: v1
kind: Namespace
metadata:
  name: prod
---
apiVersion: v1
data:
  AWS_REGION: ap-south-1
  DB_NAME: prodeksdb
  RDS_DB: prod-eks-db.crskiw0kkxmi.ap-south-1.rds.amazonaws.com
  S3_BUCKET: prod-eks-gin-bucket-backend
kind: ConfigMap
metadata:
  name: gin-config
  namespace: prod
---
apiVersion: v1
data:
  DB_PASS: YXl1c2gxMjkw
  DB_USER: YWRtaW4=
kind: Secret
metadata:
  name: db-secret
  namespace: prod
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: prod
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: app
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  name: gin-service
  namespace: prod
spec:
  ports:
  - name: gin
    port: 4000
    protocol: TCP
    targetPort: 4000
  selector:
    app: gin
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
      - image: ayushdumasia/pic-up:66e6e5f
        name: app
        ports:
        - containerPort: 80
          name: app
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      serviceAccountName: gin-app-sa
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gin
  namespace: prod
spec:
  replicas: 2
  selector:
    matchLabels:
      app: gin
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gin
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: RDS_DB
              name: gin-config
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: DB_USER
              name: db-secret
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              key: DB_PASS
              name: db-secret
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: DB_NAME
              name: gin-config
        - name: DB_PORT
          value: "3306"
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              key: AWS_REGION
              name: gin-config
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              key: S3_BUCKET
              name: gin-config
        image: ayushdumasia/go-drop:4810873
        imagePullPolicy: IfNotPresent
        name: gin
        ports:
        - containerPort: 4000
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 500m
            memory: 500Mi
      serviceAccountName: gin-app-sa
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-port: "80"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
    alb.ingress.kubernetes.io/load-balancer-attributes: idle_timeout.timeout_seconds=60
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  name: frontend-ingress
  namespace: prod
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - backend:
          service:
            name: app-service
            port:
              number: 80
        path: /
        pathType: Prefix
